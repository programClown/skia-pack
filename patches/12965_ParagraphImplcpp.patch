diff --git a/modules/skparagraph/src/ParagraphImpl.cpp b/modules/skparagraph/src/ParagraphImpl.cpp
--- a/modules/skparagraph/src/ParagraphImpl.cpp	(revision f204b137b97b44b7397de173fc54181c37ac6501)
+++ b/modules/skparagraph/src/ParagraphImpl.cpp	(date 1659467716243)
@@ -590,7 +590,9 @@
         advance.fY = metrics.height();
         auto clusterRange = ClusterRange(0, trailingSpaces);
         auto clusterRangeWithGhosts = ClusterRange(0, this->clusters().size() - 1);
+        TextIndent indent = this->paragraphStyle().getTextIndent();
+        SkScalar lineIndent = indent.getFirstLine();
-        this->addLine(SkPoint::Make(0, 0), advance,
+        this->addLine(SkPoint::Make(0, 0), lineIndent, advance,
                       textExcludingSpaces, textRange, textRange,
                       clusterRange, clusterRangeWithGhosts, run.advance().x(),
                       metrics);
@@ -619,11 +621,12 @@
                 size_t startPos,
                 size_t endPos,
                 SkVector offset,
+                SkScalar indent,
                 SkVector advance,
                 InternalLineMetrics metrics,
                 bool addEllipsis) {
                 // TODO: Take in account clipped edges
-                auto& line = this->addLine(offset, advance, textExcludingSpaces, text, textWithNewlines, clusters, clustersWithGhosts, widthWithSpaces, metrics);
+                auto& line = this->addLine(offset, indent, advance, textExcludingSpaces, text, textWithNewlines, clusters, clustersWithGhosts, widthWithSpaces, metrics);
                 if (addEllipsis) {
                     line.createEllipsis(maxWidth, getEllipsis(), true);
                 }
@@ -714,6 +717,7 @@
 }

 TextLine& ParagraphImpl::addLine(SkVector offset,
+                                 SkScalar indent,
                                  SkVector advance,
                                  TextRange textExcludingSpaces,
                                  TextRange text,
@@ -724,7 +728,7 @@
                                  InternalLineMetrics sizes) {
     // Define a list of styles that covers the line
     auto blocks = findAllBlocks(textExcludingSpaces);
-    return fLines.emplace_back(this, offset, advance, blocks,
+    return fLines.emplace_back(this, offset, indent, advance, blocks,
                                textExcludingSpaces, text, textIncludingNewLines,
                                clusters, clustersWithGhosts, widthWithSpaces, sizes);
 }