diff --git a/modules/skparagraph/src/TextLine.cpp b/modules/skparagraph/src/TextLine.cpp
--- a/modules/skparagraph/src/TextLine.cpp	(revision f204b137b97b44b7397de173fc54181c37ac6501)
+++ b/modules/skparagraph/src/TextLine.cpp	(date 1659467114730)
@@ -80,6 +80,7 @@
 
 TextLine::TextLine(ParagraphImpl* owner,
                    SkVector offset,
+                   SkScalar indent,
                    SkVector advance,
                    BlockRange blocks,
                    TextRange textExcludingSpaces,
@@ -100,6 +101,7 @@
         , fAdvance(advance)
         , fOffset(offset)
         , fShift(0.0)
+        , fIndent(indent)
         , fWidthWithSpaces(widthWithSpaces)
         , fEllipsis(nullptr)
         , fSizes(sizes)
@@ -270,23 +272,29 @@
 }
 
 void TextLine::format(TextAlign align, SkScalar maxWidth) {
-    SkScalar delta = maxWidth - this->width();
+    SkScalar delta = maxWidth - this->width() - fIndent;
     if (delta <= 0) {
         return;
     }
 
-    // We do nothing for left align
+    bool isRtl = fOwner->paragraphStyle().getTextDirection() == TextDirection::kRtl;
     if (align == TextAlign::kJustify) {
         if (!this->endsWithHardLineBreak()) {
-            this->justify(maxWidth);
-        } else if (fOwner->paragraphStyle().getTextDirection() == TextDirection::kRtl) {
+            this->justify(maxWidth - fIndent);
+            fShift = (isRtl ? 0 : fIndent);
+        } else if (isRtl) {
             // Justify -> Right align
             fShift = delta;
+        } else {
+            // Justify -> Left align
+            fShift = fIndent;
         }
     } else if (align == TextAlign::kRight) {
         fShift = delta;
     } else if (align == TextAlign::kCenter) {
-        fShift = delta / 2;
+        fShift = delta / 2 + (isRtl ? 0 : fIndent);
+    } else if (align == TextAlign::kLeft) {
+        fShift = fIndent;
     }
 }
 